services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: /bin/bash -c "python manage.py runserver 0.0.0.0:8000"
    container_name: web-online-platform
    volumes:
      - .:/code
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - elasticsearch
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://elasticsearch:9200"]
      interval: 10s
      retries: 5

  db:
    image: postgres:16-alpine
    container_name: db-postgres-platform
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: bitnami/elasticsearch:8.7.0
    container_name: elasticsearch-platform
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      retries: 5

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  backend:
    driver: bridge